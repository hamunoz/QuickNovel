name: Build App

on:
  push:
    branches:
      - '*'

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_wrapper:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

  build:
    name: Build app
    needs: check_wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-disabled: false

      - name: Generate temporary release keystore
        run: |
          keytool -genkey -v -keystore release.keystore -alias quicknovel -keyalg RSA -keysize 2048 -validity 10000 -storepass android -keypass android -dname "CN=QuickNovel, OU=CI, O=QuickNovel, L=SF, S=CA, C=US"

      - name: Build app (signed)
        run: ./gradlew --no-daemon assembleRelease
        env:
          SIGNING_STORE_FILE: ${{ github.workspace }}/release.keystore
          SIGNING_STORE_PASSWORD: android
          SIGNING_KEY_ALIAS: quicknovel
          SIGNING_KEY_PASSWORD: android

      - name: Prepare APK
        run: |
          cd app/build/outputs/apk/release
          if [ -f app-release.apk ]; then mv app-release.apk QuickNovel.apk; else mv app-release-unsigned.apk QuickNovel.apk; fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: QuickNovel
          path: app/build/outputs/apk/release/QuickNovel.apk

      - name: Upload to GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/outputs/apk/release/QuickNovel.apk
